{"ast":null,"code":"var _jsxFileName = \"/Users/victoriakanicka/sei-monstera/projects/project3-PixelProgress/pixel-progress-front-end/pixel-react-app/src/App.js\";\nimport 'semantic-ui-css/semantic.min.css';\nimport './App.css';\nimport React, { Component } from \"react\";\nimport Goal from \"./Goal\";\nimport NewForm from \"./NewForm\";\nimport { Button, Icon } from 'semantic-ui-react';\nimport IconButton from \"./components/IconButton\";\nimport 'semantic-ui-css/semantic.min.css';\nimport { Container, Header, List } from \"semantic-ui-react\";\nimport pkg from 'semantic-ui-react/package.json';\nimport CreateModal from \"./components/CreateModal\";\nimport EditModal from \"./components/EditModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet baseURL = ''; // const p = (x) => {console.log(x)}\n// p(process.env.NODE_ENV)\n\nif (process.env.NODE_ENV === 'development') {\n  baseURL = 'http://localhost:3003';\n} else {\n  baseURL = 'your heroku backend url here';\n} // p(`current base URL: ${baseURL}`)\n\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getGoals = () => {\n      fetch(baseURL + '/goals').then(res => {\n        return res.json();\n      }).then(data => {\n        this.setState({\n          goals: data\n        });\n      });\n    };\n\n    this.addGoal = newGoal => {\n      const copyGoals = [...this.state.goals];\n      copyGoals.push(newGoal);\n      this.setState({\n        goals: copyGoals\n      });\n    };\n\n    this.editGoal = async goal => {\n      console.log('edit goal function placeholder');\n      const url = baseURL + \"/goals/\" + goal._id;\n\n      try {\n        const response = await fetch(url, {\n          method: \"PUT\",\n          body: JSON.stringify({\n            name: goal.name,\n            sesions: goal.sessions,\n            week_start_dates: goal.week_start_dates,\n            steps: goal.steps\n          }),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n\n        if (response.status === 200) {}\n      } catch (error) {\n        console.log('error: ', error);\n      }\n    };\n\n    this.deleteGoal = async id => {\n      const url = baseURL + \"/goals/\" + id;\n\n      try {\n        const response = await fetch(url, {\n          method: \"DELETE\"\n        });\n\n        if (response.status === 200) {\n          const index = this.state.goals.findIndex(goal => goal._id === id);\n          const copyGoals = [...this.state.goals];\n          copyGoals.splice(index, 1);\n          this.setState({\n            goals: copyGoals\n          });\n        }\n      } catch (error) {\n        console.log('error: ', error);\n      }\n    };\n\n    this.fillStep = e => {\n      e.preventDefault();\n      document.getElementById(`${e.target.id}`).classList.toggle('clickedStep');\n    };\n\n    this.state = {\n      goals: []\n    };\n  }\n\n  componentDidMount() {\n    this.getGoals();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Pixel Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CreateModal, {\n        addGoal: this.addGoal,\n        baseURL: baseURL\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), this.state.goals.map(goal => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [goal.name, \" \\xA0\\xA0\", /*#__PURE__*/_jsxDEV(EditModal, {\n              className: \"IconButton\",\n              editGoal: this.editGoal,\n              baseURL: baseURL,\n              actionFunction: () => {\n                this.editGoal(goal._id);\n              },\n              goal: goal,\n              id: goal._id,\n              goals: this.state.goals\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              className: \"IconButton\",\n              icon: 'trash alternate',\n              actionFunction: () => {\n                this.deleteGoal(goal._id);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Goal, {\n            name: goal.name,\n            sessions: goal.days,\n            steps: goal.categories,\n            reps: goal.week_start_dates,\n            fillStep: this.fillStep\n          }, `${goal.name}-goal`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/victoriakanicka/sei-monstera/projects/project3-PixelProgress/pixel-progress-front-end/pixel-react-app/src/App.js"],"names":["React","Component","Goal","NewForm","Button","Icon","IconButton","Container","Header","List","pkg","CreateModal","EditModal","baseURL","process","env","NODE_ENV","App","constructor","props","getGoals","fetch","then","res","json","data","setState","goals","addGoal","newGoal","copyGoals","state","push","editGoal","goal","console","log","url","_id","response","method","body","JSON","stringify","name","sesions","sessions","week_start_dates","steps","headers","status","error","deleteGoal","id","index","findIndex","splice","fillStep","e","preventDefault","document","getElementById","target","classList","toggle","componentDidMount","render","map","days","categories"],"mappings":"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","sourcesContent":["import 'semantic-ui-css/semantic.min.css'\nimport './App.css';\n\nimport React, {Component} from \"react\"\nimport Goal from \"./Goal\"\nimport NewForm from \"./NewForm\"\n\nimport { Button, Icon } from 'semantic-ui-react'\n\nimport IconButton from \"./components/IconButton\"\n\nimport 'semantic-ui-css/semantic.min.css'\nimport { Container, Header, List } from \"semantic-ui-react\";\n\nimport pkg from 'semantic-ui-react/package.json'\nimport CreateModal from \"./components/CreateModal\"\nimport EditModal from \"./components/EditModal\"\n\n\n\n\nlet baseURL = ''\n// const p = (x) => {console.log(x)}\n\n// p(process.env.NODE_ENV)\n\nif (process.env.NODE_ENV === 'development') {\n  baseURL = 'http://localhost:3003'\n} else {\n  baseURL = 'your heroku backend url here'\n}\n// p(`current base URL: ${baseURL}`)\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      goals: [],\n    }\n    }\n\n    getGoals = () => {\n      fetch(baseURL + '/goals')\n        .then(res => {return res.json()\n        }).then(data => {\n        this.setState({\n          goals: data,\n        })\n      })\n\n  }\n\n  addGoal = (newGoal) => {\n    const copyGoals = [...this.state.goals]\n    copyGoals.push(newGoal)\n    this.setState({\n      goals: copyGoals,\n    })\n  }\n\n  editGoal = async (goal) => {\n    console.log('edit goal function placeholder')\n\n    const url = baseURL + \"/goals/\" + goal._id\n\n\n\n    try {\n      const response = await fetch(url, {\n        method: \"PUT\",\n        body: JSON.stringify({\n          name: goal.name,\n          sesions: goal.sessions,\n          week_start_dates: goal.week_start_dates,\n          steps: goal.steps\n        }),\n        headers: {\n          'Content-Type' : 'application/json'\n        }\n      })\n\n      if (response.status === 200){\n\n      }\n\n    }\n    catch(error){\n      console.log('error: ', error)\n    }\n  }\n\n  deleteGoal = async (id) => {\n\n    const url = baseURL + \"/goals/\" + id\n\n    try {\n      const response = await fetch(url, {method: \"DELETE\"})\n\n      if (response.status === 200){\n\n        const index = this.state.goals.findIndex(goal => goal._id === id)\n        const copyGoals = [...this.state.goals]\n        copyGoals.splice(index, 1)\n        this.setState({\n          goals: copyGoals\n        })\n      }\n\n    }\n    catch(error){\n      console.log('error: ', error)\n    }\n  }\n\n  fillStep = (e) => {\n    e.preventDefault()\n    document.getElementById(`${e.target.id}`).classList.toggle('clickedStep')\n  }\n\n  componentDidMount(){\nthis.getGoals()\n}\n\n  render() {\n    return (\n      <div className='App'>\n        <h1>Pixel Progress</h1>\n        <CreateModal\n        addGoal={this.addGoal}\n        baseURL={baseURL}\n        />\n\n        {this.state.goals.map(goal => {\n          return (\n            <>\n              <h3>{goal.name} &#160;&#160;\n              <EditModal\n                className=\"IconButton\"\n                editGoal={this.editGoal}\n                baseURL={baseURL}\n                actionFunction={() => {this.editGoal(goal._id)}}\n                goal={goal}\n                id={goal._id}\n                goals={this.state.goals}\n                />\n\n              <IconButton\n                className=\"IconButton\"\n                icon={'trash alternate'}\n                actionFunction={() => {this.deleteGoal(goal._id)}}/>\n              </h3>\n\n\n              <Goal\n              key={`${goal.name}-goal`}\n              name={goal.name}\n              sessions={goal.days}\n              steps={goal.categories}\n              reps={goal.week_start_dates}\n              fillStep={this.fillStep}\n              />\n            </>\n          )\n        })}\n\n\n\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}