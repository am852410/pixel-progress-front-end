{"ast":null,"code":"var _jsxFileName = \"/Users/victoriakanicka/sei-monstera/projects/project3-PixelProgress/pixel-progress-front-end/pixel-react-app/src/components/LoginForm.js\";\nimport React, { Component } from 'react';\nimport { Button, Divider, Form, Grid, Segment } from 'semantic-ui-react';\nimport Register from \"./RegisterModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.loggingUser = async e => {\n      console.log('loggingUser');\n      e.preventDefault();\n      const url = baseURL + '/users/login';\n      const loginBody = {\n        username: e.target.username.value,\n        password: e.target.password.value\n      };\n\n      try {\n        const response = await fetch(url, {\n          method: 'POST',\n          body: JSON.stringify(loginBody),\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          credentials: \"include\" // SENDING COOKIES\n\n        });\n\n        if (response.status === 200) {\n          this.getGoals();\n        }\n      } catch (err) {\n        console.log('Error => ', err);\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Segment, {\n      placeholder: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        columns: 2,\n        relaxed: \"very\",\n        stackable: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: this.props.loggingUser,\n            children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n              icon: \"user\",\n              iconPosition: \"left\",\n              label: \"Username\",\n              placeholder: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n              icon: \"lock\",\n              iconPosition: \"left\",\n              label: \"Password\",\n              type: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              content: \"Login\",\n              primary: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n          verticalAlign: \"middle\",\n          children: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        vertical: true,\n        children: \"Or\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/victoriakanicka/sei-monstera/projects/project3-PixelProgress/pixel-progress-front-end/pixel-react-app/src/components/LoginForm.js"],"names":["React","Component","Button","Divider","Form","Grid","Segment","Register","Login","constructor","props","loggingUser","e","console","log","preventDefault","url","baseURL","loginBody","username","target","value","password","response","fetch","method","body","JSON","stringify","headers","credentials","status","getGoals","err","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,IAA1B,EAAgCC,IAAhC,EAAsCC,OAAtC,QAAqD,mBAArD;AACA,OAAOC,QAAP,MAAqB,iBAArB;;AAEA,eAAe,MAAMC,KAAN,SAAoBP,SAApB,CAA8B;AAC3CQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAInBC,WAJmB,GAIL,MAAOC,CAAP,IAAa;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAF,MAAAA,CAAC,CAACG,cAAF;AACA,YAAMC,GAAG,GAAGC,OAAO,GAAG,cAAtB;AACA,YAAMC,SAAS,GAAG;AAChBC,QAAAA,QAAQ,EAAEP,CAAC,CAACQ,MAAF,CAASD,QAAT,CAAkBE,KADZ;AAEhBC,QAAAA,QAAQ,EAAEV,CAAC,CAACQ,MAAF,CAASE,QAAT,CAAkBD;AAFZ,OAAlB;;AAIA,UAAI;AACF,cAAME,QAAQ,GAAG,MAAMC,KAAK,CAACR,GAAD,EAAM;AAChCS,UAAAA,MAAM,EAAE,MADwB;AAEhCC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeV,SAAf,CAF0B;AAGhCW,UAAAA,OAAO,EAAE;AACP,4BAAgB;AADT,WAHuB;AAMhCC,UAAAA,WAAW,EAAE,SANmB,CAMT;;AANS,SAAN,CAA5B;;AASA,YAAIP,QAAQ,CAACQ,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,eAAKC,QAAL;AACD;AACF,OAbD,CAcA,OAAOC,GAAP,EAAY;AACVpB,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBmB,GAAzB;AACD;AACF,KA7BkB;AAElB;;AA6BDC,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,OAAD;AAAS,MAAA,WAAW,MAApB;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,OAAO,EAAE,CAAf;AAAkB,QAAA,OAAO,EAAC,MAA1B;AAAiC,QAAA,SAAS,MAA1C;AAAA,gCACE,QAAC,IAAD,CAAM,MAAN;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,QAAQ,EAAE,KAAKxB,KAAL,CAAWC,WAA3B;AAAA,oCACE,QAAC,IAAD,CAAM,KAAN;AACE,cAAA,IAAI,EAAC,MADP;AAEE,cAAA,YAAY,EAAC,MAFf;AAGE,cAAA,KAAK,EAAC,UAHR;AAIE,cAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,oBADF,eAOE,QAAC,IAAD,CAAM,KAAN;AACE,cAAA,IAAI,EAAC,MADP;AAEE,cAAA,YAAY,EAAC,MAFf;AAGE,cAAA,KAAK,EAAC,UAHR;AAIE,cAAA,IAAI,EAAC;AAJP;AAAA;AAAA;AAAA;AAAA,oBAPF,eAcE,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAC,OAAhB;AAAwB,cAAA,OAAO;AAA/B;AAAA;AAAA;AAAA;AAAA,oBAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAoBE,QAAC,IAAD,CAAM,MAAN;AAAa,UAAA,aAAa,EAAC,QAA3B;AAAA,iCACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBApBF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eA0BE,QAAC,OAAD;AAAS,QAAA,QAAQ,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA1BF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA8BD;;AA/D0C","sourcesContent":["import React, {Component} from 'react'\nimport { Button, Divider, Form, Grid, Segment } from 'semantic-ui-react'\nimport Register from \"./RegisterModal\"\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props)\n  }\n\n  loggingUser = async (e) => {\n    console.log('loggingUser')\n    e.preventDefault()\n    const url = baseURL + '/users/login'\n    const loginBody = {\n      username: e.target.username.value,\n      password: e.target.password.value\n    }\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(loginBody),\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: \"include\" // SENDING COOKIES\n      })\n\n      if (response.status === 200) {\n        this.getGoals()\n      }\n    }\n    catch (err) {\n      console.log('Error => ', err);\n    }\n  }\n\n  render() {\n    return (\n      <Segment placeholder>\n        <Grid columns={2} relaxed='very' stackable>\n          <Grid.Column>\n            <Form onSubmit={this.props.loggingUser}>\n              <Form.Input\n                icon='user'\n                iconPosition='left'\n                label='Username'\n                placeholder='Username'\n              />\n              <Form.Input\n                icon='lock'\n                iconPosition='left'\n                label='Password'\n                type='password'\n              />\n\n              <Button content='Login' primary />\n            </Form>\n          </Grid.Column>\n\n          <Grid.Column verticalAlign='middle'>\n            <Register />\n          </Grid.Column>\n        </Grid>\n\n        <Divider vertical>Or</Divider>\n      </Segment>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}