{"ast":null,"code":"var _jsxFileName = \"/Users/victoriakanicka/sei-monstera/projects/project3-PixelProgress/pixel-progress-front-end/pixel-react-app/src/App.js\";\nimport './App.css';\nimport React, { Component } from \"react\";\nimport Goal from \"./Goal\";\nimport NewForm from \"./NewForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet baseURL = ''; // const p = (x) => {console.log(x)}\n// p(process.env.NODE_ENV)\n\nif (process.env.NODE_ENV === 'development') {\n  baseURL = 'http://localhost:3003';\n} else {\n  baseURL = 'your heroku backend url here';\n} // p(`current base URL: ${baseURL}`)\n\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getGoals = () => {\n      fetch(baseURL + '/goals').then(res => {\n        return res.json();\n      }).then(data => {\n        this.setState({\n          goals: data\n        });\n      });\n    };\n\n    this.addGoal = newGoal => {\n      const copyGoals = [...this.state.goals];\n      copyGoals.push(newGoal);\n      this.setState({\n        goals: copyGoals\n      });\n    };\n\n    this.deleteGoal = async trashGoal => {\n      const url = baseURL + \"goals/\" + id;\n      const copyGoals = [...this.state.goals];\n      copyGoals.splice();\n    };\n\n    this.fillStep = e => {\n      e.preventDefault();\n      document.getElementById(`${e.target.id}`).classList.toggle('clickedStep');\n    };\n\n    this.state = {\n      goals: []\n    };\n  }\n\n  componentDidMount() {\n    this.getGoals();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Pixel Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), this.state.goals.map(goal => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [goal.name, \" - \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 33\n            }, this), \" - \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 53\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Goal, {\n            name: goal.name,\n            sessions: goal.days,\n            steps: goal.categories,\n            reps: goal.week_start_dates,\n            fillStep: this.fillStep\n          }, `${goal.name}-goal`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true);\n      }), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NewForm, {\n        addGoal: this.addGoal,\n        baseURL: baseURL\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/victoriakanicka/sei-monstera/projects/project3-PixelProgress/pixel-progress-front-end/pixel-react-app/src/App.js"],"names":["React","Component","Goal","NewForm","baseURL","process","env","NODE_ENV","App","constructor","props","getGoals","fetch","then","res","json","data","setState","goals","addGoal","newGoal","copyGoals","state","push","deleteGoal","trashGoal","url","id","splice","fillStep","e","preventDefault","document","getElementById","target","classList","toggle","componentDidMount","render","map","goal","name","days","categories","week_start_dates"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, {Component} from \"react\"\nimport Goal from \"./Goal\"\nimport NewForm from \"./NewForm\"\nlet baseURL = ''\n// const p = (x) => {console.log(x)}\n\n// p(process.env.NODE_ENV)\n\nif (process.env.NODE_ENV === 'development') {\n  baseURL = 'http://localhost:3003'\n} else {\n  baseURL = 'your heroku backend url here'\n}\n// p(`current base URL: ${baseURL}`)\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      goals: [],\n    }\n    }\n\n    getGoals = () => {\n      fetch(baseURL + '/goals')\n        .then(res => {return res.json()\n        }).then(data => {\n        this.setState({\n          goals: data,\n        })\n      })\n\n  }\n\n  addGoal = (newGoal) => {\n    const copyGoals = [...this.state.goals]\n    copyGoals.push(newGoal)\n    this.setState({\n      goals: copyGoals,\n    })\n  }\n\n  deleteGoal = async (trashGoal) => {\n    const url = baseURL + \"goals/\" + id\n    const copyGoals = [...this.state.goals]\n    copyGoals.splice()\n  }\n\n  fillStep = (e) => {\n    e.preventDefault()\n    document.getElementById(`${e.target.id}`).classList.toggle('clickedStep')\n  }\n\n  componentDidMount(){\nthis.getGoals()\n}\n\n  render() {\n    return (\n      <div className='App'>\n        <h1>Pixel Progress</h1>\n        {this.state.goals.map(goal => {\n          return (\n            <>\n              <h3>{goal.name} - <span>edit</span> - <span>delete</span></h3>\n\n              <Goal\n              key={`${goal.name}-goal`}\n              name={goal.name}\n              sessions={goal.days}\n              steps={goal.categories}\n              reps={goal.week_start_dates}\n              fillStep={this.fillStep}\n              />\n            </>\n          )\n        })}\n\n        <br/>\n        <NewForm\n          addGoal={this.addGoal}\n          baseURL={baseURL}\n        />\n        <br/>\n\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}